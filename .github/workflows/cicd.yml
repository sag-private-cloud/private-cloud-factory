name: CI/CD

on:
  workflow_dispatch:


env:
  #################################
  ### Container image specifics ###
  PACKAGES: 'WmJDBCAdapter:10.3.0.20'
  CUSTOM_PACKAGES: 'FlintEmployeeRegistry'
  CUSTOM_PACKAGES_ORG_URL: 'https://github.com/flint-tech-solutions'
  ##################################
  
  SAG_WPM_TOKEN: ${{ secrets.SAG_WPM_TOKEN }}
  DOCKER_USER: ${{ vars.DOCKER_USER }}            # TODO change to secret with different username
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  DOCKER_REGISTRY: ${{ vars.DOCKER_REGISTRY }}
  SAG_CR_USER: ${{ secrets.SAG_CR_USER }}
  SAG_CR_PASSWORD: ${{ secrets.SAG_CR_PASSWORD }}
  IMAGE_REPOSITORY: esbmsr
  IMAGE_TAG: dev


jobs:
  init:
    name: Init and validate inputs
    runs-on: rufus
    steps:
      - uses: actions/checkout@v3
      - name: Validate
        run: |
          ./scripts/validate_input.sh SAG_WPM_TOKEN "$SAG_WPM_TOKEN"
          ./scripts/validate_input.sh DOCKER_REGISTRY "$DOCKER_REGISTRY"
          ./scripts/validate_input.sh DOCKER_USER "$DOCKER_USER"
          ./scripts/validate_input.sh DOCKER_PASSWORD "$DOCKER_PASSWORD"
          ./scripts/validate_input.sh SAG_CR_USER "$SAG_CR_USER"
          ./scripts/validate_input.sh SAG_CR_PASSWORD "$SAG_CR_PASSWORD"

  build:
    needs: [init]
    name: Build image
    runs-on: rufus
    outputs:
      imageName: ${{ steps.build-image.outputs.image-name }}
    steps:
      - uses: actions/checkout@v3

      - name: Login to the SAG CR
        run: docker login -u $SAG_CR_USER -p $SAG_CR_PASSWORD sagcr.azurecr.io
          
      # Runs a single command using the runners shell
      - name: Build the image
        id: build-image
        uses: sag-private-cloud/sag-build-image@v1.1
        with:
          context: "."
          dockerfile: MSR/Dockerfile
          image-name: ${DOCKER_REGISTRY}/${IMAGE_REPOSITORY}:${IMAGE_TAG}
          wpm-registry: softwareag
          wpm-registry-token: $SAG_WPM_TOKEN
          packages: $PACKAGES
          custom-packages: $CUSTOM_PACKAGES
          custom-packages-org-url: $CUSTOM_PACKAGES_ORG_URL

      - name: Push the image to the CR
        run: |
          docker login -u $DOCKER_USER -p $DOCKER_PASSWORD $DOCKER_REGISTRY
          docker push ${DOCKER_REGISTRY}/${IMAGE_REPOSITORY}:${IMAGE_TAG}

  deploy:
    needs: [build]
    name: Deploy the solution to the cloud
    runs-on: rufus

    steps:
      - uses: actions/checkout@v3
      
      - name: Add Software AG Helm Charts repository
        uses: sag-private-cloud/sag-helm-add-repo@v1
        
      - name: Deploy
        uses: sag-private-cloud/sag-helm-deploy@v1
        with: 
          release-name: msr
          helm-chart: softwareag/microservices-runtime
          docker-registry: $DOCKER_REGISTRY
          docker-username: $DOCKER_USER
          docker-password: $DOCKER_PASSWORD
          extra-args: >- 
            --set "msr.image=${{ needs.build.outputs.imageName }}" 
            --set-file externalFiles.properties=${{ github.workspace }}/MSR/application.properties
