# This is a basic workflow to help you get started with Actions

name: CI/CD

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      image_repository:
        description: Image repository
        required: true
        default: esbmsr
        type: string
      image_tag:
        description: Image tag
        required: true
        default: dev
        type: string


env:
  SAG_WPM_TOKEN: ${{ secrets.SAG_WPM_TOKEN }}
  DOCKER_USER: ${{ vars.DOCKER_USER }}            # TODO change to secret with different username
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  DOCKER_REGISTRY: ${{ vars.DOCKER_REGISTRY }}
  IMAGE_REPOSITORY: ${{ inputs.image_repository }}
  IMAGE_TAG: ${{ inputs.image_tag }}


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  init:
    name: Init and validate outputs
    runs-on: gepe-wsl
    steps:
      - uses: actions/checkout@v3
      - name: Validate
        run: |
          ./scripts/validate_input.sh SAG_WPM_TOKEN "$SAG_WPM_TOKEN"
          ./scripts/validate_input.sh DOCKER_REGISTRY "$DOCKER_REGISTRY"
          ./scripts/validate_input.sh DOCKER_USER "$DOCKER_USER"
          ./scripts/validate_input.sh DOCKER_PASSWORD "$DOCKER_PASSWORD"

  # This workflow contains a single job called "build"
  build:
    needs: [init]
    name: Build image
    # The type of runner that the job will run on
    runs-on: gepe-wsl

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Build the image
        uses: sag-private-cloud/sag-build-image@v1
        with:
          context: "."
          dockerfile: Dockerfile_MSR
          image-name: ${DOCKER_REGISTRY}/${IMAGE_REPOSITORY}:${IMAGE_TAG}
          wpm-registry: softwareag
          wpm-registry-token: $WPM_REGISTRY_TOKEN
          packages: WmJDBCAdapter:10.3.0

      - name: Push the image to the ACR
        run: |
          docker login -u $DOCKER_USER -p $DOCKER_PASSWORD $DOCKER_REGISTRY
          docker push ${DOCKER_REGISTRY}/${IMAGE_REPOSITORY}:${IMAGE_TAG}

  deploy:
    needs: [build]
    name: Deploy the solution to the cloud
    runs-on: gepe-wsl

    steps:
      - name: Deploy
        run: echo "deploy the image to the cluster"
